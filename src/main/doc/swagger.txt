swagger: "2.0"
info:
  description: "This is a Swagger documentation of  Matera Talent Pool."
  version: "1.0.0"
  title: "Matera Talent Pool"

tags:
- name: "Employee"
  description: "Everything about employees"

paths:
  /employees:
    get:
      tags:
      - "Employee"
      summary: "Returns all employees"
      description: "Returns all ACTIVE employees"
      operationId: "getInventory"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Employee"
    post:
      tags:
      - "Employee"
      summary: "Create a employee"
      description: "Create a employee with new random id"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "Employee"
        description: "The new Employee"
        required: true
        schema:
          $ref: "#/definitions/Employee"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad Request"

  /employees/{id}:
    get:
      tags:
      - "Employee"
      summary: "Find employee by id"
      description: "Returns a single Employee"
      operationId: "getEmployeeById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of employee to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Employee"
        404:
          description: "Employee not found"
          schema:
            $ref: "#/definitions/ErrorDetails"
    delete:
      tags:
      - "Employee"
      summary: "Deletes an employee."
      description: "This operation needs a Basic Authentication. The user and password is matera/matera - Needs to put in Header the Key 'Authorization' and Value 'Basic bWF0ZXJhOm1hdGVyYQ=='"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of employee to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "Return 'No Content' when the operation is successful"
        401:
          description: "Authentication information is missing or invalid"
        404:
          description: "Employee not found"
          schema:
            $ref: "#/definitions/ErrorDetails"
      security:
        - basicAuth: []
    put:
      tags:
      - "Employee"
      summary: "Update an existing employee"
      description: "Update an existing employee by id"
      consumes:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Id of employee to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "Employee"
        in: "body"
        description: "The new Employee"
        required: true
        schema:
          $ref: "#/definitions/Employee"
      responses:
        204:
          description: "Return No Content when the operation is successful"
        404:
          description: "Employee not found"
          schema:
            $ref: "#/definitions/ErrorDetails"

securityDefinitions:
  basicAuth:
    type: basic

definitions:
  Employee:
    type: "object"
    required:
    - "id"
    - "firstName"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: "1"
      firstName:
        type: "string"
        example: "Antony"
      middleInitial:
        type: "string"
        example: "Smith"
      lastName:
        type: "string"
        example: "Williams"
      dateOfBirth:
        type: "string"
        format: "date"
        example: "1985-10-14"
      dateOfEmployment:
        type: "string"
        format: "date"
        example: "2018-01-30"
      status:
        type: "string"
        description: "Employee status"
        enum:
        - "ACTIVE"
        - "INACTIVE"
  ErrorDetails:
    type: "object"
    properties:
      status:
        type: "integer"
        format: "int64"
      timestamp:
        type: "integer"
        format: "int64"
      message:
        type: "string"